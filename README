DESCRIPTION:
------------
	This script gets all comments in a web source code
	You can use it with either a URL (-u) or by passing a file as an argument (-f)
		- URL can be either a page or JS URL.
		- File can be HTML/PHP or JS
		See "examples" section for more details.


HELP:
-----
	usage: comments.py [-f <input file>]

	Get HTML and JavaScript comments from a file or a website.

	optional arguments:
	  -h, --help 	show this help message and exit
	  -f F 			input source file
	  -u U 			target url
	  -o 			output file (todo)



TODO:
-----
	* Spidering
	* manage session/cookies (detect when redirect towards login page)
		-> see requests (requests.get)
	
	* When source code is provided:
		-d input dir
		-f what about external JS loaded?
	* When source file is provided:
		How to make the difference between a call to a local files (/include/js/blah.js) and a call to a url (http://blah.com/yeah.js) ?
	* CSS comments ?


TO IMPROVE:
-----------
	* clear screen (os.system("cls")) obviously doesn't work on Linux
	* regex (all)
	* at this point, can't use -f AND -u together


ISSUES:
-------
	- REGEX doesn't work when JS is minimized
	- if script tag is not closed, then jscode is empty
	- when -u <url> if the URL has GET parameters, then you MUST use quotes. example: 
		comments.py -u "http://website.com?param1=1&param2=2"
		If you don't, you may have an error such as: 'blah' is not recognized as an internal or external command, ...
	- when -f <file>, the "target_type" is then defined with the value "file". There will be an issue if you try to request an external JS with its URL, for instance:
		1. run this script with a local file (php, html) as a target
		2. try to access an external JS such as: http://blah.com/myjs.js
		3. return to the original target
		In short: if file: stay with file, if url: stay with url


EXAMPLES:
---------
comments.py -f <file.php>
comments.py -f <file.html>
comments.py -f <file.js>
comments.py -u http://<url.com>
comments.py -u "http://url.com?param1=1&param2=2"
comments.py -u https://<url.com>
comments.py -u http://<url.js>

More to come.